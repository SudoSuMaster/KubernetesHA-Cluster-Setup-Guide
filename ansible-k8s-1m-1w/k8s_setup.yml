- name: Kubernetes Cluster Setup
  hosts: k8s_cluster
  become: yes
  tasks:
    - name: Disable Swap
      shell: |
        swapoff -a
        sed -i '/swap/d' /etc/fstab
      args:
        executable: /bin/bash

    - name: Configure Kernel Modules
      copy:
        dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply Kernel Parameters
      command: sysctl --system

    - name: Load Required Kernel Modules
      shell: |
        modprobe overlay
        modprobe br_netfilter

    - name: Persist Kernel Modules
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: Install Dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Install Containerd
      apt:
        name: containerd
        state: present

    - name: Configure Containerd
      shell: |
        mkdir -p /etc/containerd
        containerd config default | tee /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Enable SystemdCgroup in Containerd
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Restart and Enable Containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Add Kubernetes Repo Key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | tee /etc/apt/trusted.gpg.d/kubernetes.asc

    - name: Add Kubernetes Repository
      shell: |
        echo "deb https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list

    - name: Install Kubernetes Components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Enable kubelet
      systemd:
        name: kubelet
        enabled: yes

# === Control Plane Initialization ===
- name: Initialize Kubernetes Control Plane
  hosts: control_plane
  become: yes
  tasks:
    - name: Initialize Control Plane
      command: kubeadm init --control-plane-endpoint=192.168.227.10 --pod-network-cidr=192.168.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_output

    - name: Save Join Command for Worker Nodes
      shell: |
        kubeadm token create --print-join-command
      register: join_command
      changed_when: false

    - name: Copy Join Command to Local Machine
      local_action:
        module: copy
        content: "{{ join_command.stdout }}"
        dest: "./kubeadm_join.sh"
      when: join_command.stdout is defined

    - name: Set Up Kubeconfig for Admin User
      shell: |
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config
      args:
        executable: /bin/bash

    - name: Deploy Calico Network Plugin
      command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml

# === Worker Node Join ===
- name: Join Worker Nodes to Cluster
  hosts: worker_nodes
  become: yes
  tasks:
    - name: Copy Join Command to Worker Nodes
      copy:
        src: "./kubeadm_join.sh"
        dest: "/tmp/kubeadm_join.sh"
        mode: 0755

    - name: Join Worker Nodes to Kubernetes Cluster
      command: sh /tmp/kubeadm_join.sh
      when: "'kubeadm join' in lookup('file', './kubeadm_join.sh')"
